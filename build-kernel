#!/bin/sh
# ------------------------------------------------------------------------------
# build-kernel - Builds the ev3dev kernel.
# ------------------------------------------------------------------------------

echo
echo -------------------------------------------------------------------------------
echo BUILDING KERNEL
echo -------------------------------------------------------------------------------
echo

set -e

. ./setup-env

kernel_src_path="$EV3DEV_KERNEL"
obj_path="$EV3DEV_OBJ"
kernel_install_path="$EV3DEV_INSTALL_KERNEL"
modules_install_path="$EV3DEV_INSTALL_MODULES"
dtbs_install_path="$EV3DEV_INSTALL_DTBS"
make_args="$EV3DEV_MAKE_ARGS -C ${kernel_src_path}

KBUILD_OUTPUT=${obj_path}
ARCH=arm
CROSS_COMPILE=$EV3DEV_TOOLCHAIN/$EV3DEV_ABI"

if [ ! -d "${obj_path}" ]
then
	echo "CREATING OBJ DIRECTORY"
	make ${make_args} mrproper
fi

if [ ! -f "${obj_path}/.config" ]
then
	echo "LOADING DEFAULT KERNEL CONFIGURATION"
	make ${make_args} defconfig KBUILD_DEFCONFIG=${EV3DEV_DEFCONFIG}
fi

if [ $# -eq 0 ]
then
	echo "CROSS COMPILING KERNEL"
	make ${make_args} uImage modules

	if [ ! -d "${kernel_install_path}" ]
	then
		echo "CREATING KERNEL INSTALL DIRECTORY"
		mkdir -p "${kernel_install_path}"
	fi

	if [ ! -d "${modules_install_path}" ]
	then
		echo "CREATING MODULE INSTALL DIRECTORY"
		mkdir -p "${modules_install_path}"
	fi

	echo "COPYING BOOTABLE IMAGE TO INSTALL DIRECTORY"
	if [ "$RPI" = "1" ]; then
		mkknlimg ${obj_path}/arch/arm/boot/zImage ${kernel_install_path}/kernel.img
	elif [ "$RPI" = "2" ]; then
		mkknlimg ${obj_path}/arch/arm/boot/zImage ${kernel_install_path}/kernel7.img
	else
		cp ${obj_path}/arch/arm/boot/uImage ${kernel_install_path}
	fi

	echo "COPYING MODULES TO INSTALL DIRECTORY"
	make ${make_args} modules_install INSTALL_MOD_PATH=${modules_install_path}

	if [ ! -z ${EV3DEV_INSTALL_DTBS} ]; then
		echo "COPYING DEVICE TREE BLOCKS TO INSTALL DIRECTORY"
		make ${make_args} dtbs_install INSTALL_DTBS_PATH=${dtbs_install_path}
	fi
else
	echo "CROSS COMPILING KERNEL"
	make ${make_args} $@

	for arg in "$@"
	do
		# If cleaning, remove the files generated by this script too.
		if [ "$arg" = "clean" -o "$arg" = "mrproper" -o "$arg" = "distclean" ]
		then
			rm -rf kernel
		fi
	done
fi
