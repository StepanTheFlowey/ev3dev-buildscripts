#!/bin/sh
# ------------------------------------------------------------------------------
# build-extras - Builds other apps as needed outside of the kernel tree
#
# ------------------------------------------------------------------------------

echo
echo -------------------------------------------------------------------------------
echo BUILDING EXTRAS
echo -------------------------------------------------------------------------------
echo
sleep 1

project=`pwd`

. ./build_ev3dev_setup

PATH=${AM1808_COMPILER}:$PATH

# -------------------------------------------------------------------------------

if [ "$1" = "rtl8188eu" ]
then
    echo BUILDING rtl8188eu
    echo -------------------------------------------------------------------------------
    echo  ${AM1808_KERNEL} 

    cd "../$1"

    MODDESTDIR=${project}/release/lib/modules/3.3.0/kernel/drivers/net/wireless
    FWDESTDIR=${project}/release/lib/firmware/rtlwifi

    CONFIG_RTL8188EU=m make -C ${AM1808_KERNEL} M=`pwd` ARCH=arm CROSS_COMPILE=${AM1808_ABI} modules

    ${AM1808_ABI}strip "8188eu.ko" --strip-unneeded
    
    install -p -D -m 644 8188eu.ko       ${MODDESTDIR}/8188eu.ko
    install -p -D -m 644 rtl8188eufw.bin ${FWDESTDIR}/rtl8188eufw.bin
fi

# if [ "$1" = "modules" ]
# then
#   make modules ARCH=arm CROSS_COMPILE=${AM1808_ABI}
#   exit
# fi
# 
# if [ "$1" = "modules_install" ]
# then
#   make modules_install ARCH=arm CROSS_COMPILE=${AM1808_ABI} INSTALL_MOD_PATH=${project}/release
#   rm ${project}/release/lib/modules/3.3.0/build
#   rm ${project}/release/lib/modules/3.3.0/source
# 
#   # Or is it better to just copy the modules and run depmod on the target?
# # mkdir -p ${project}/modules/lib/modules/3.3.0
# # cp --parents `find . -name "*.ko"` ${project}/modules/lib/modules/3.3.0
#   exit
# fi
# 
# cp ${project}/ev3dev.config ${AM1808_KERNEL}/.config
# 
# echo "CROSS COMPILING KERNEL"
# 
# make ARCH=arm CROSS_COMPILE=${AM1808_ABI}
# 
# echo "BUILDING BOOTABLE IMAGE"
# 
# make -j4 uImage ARCH=arm CROSS_COMPILE=${AM1808_ABI}
# 
# echo "COPYING BOOTABLE IMAGE TO LOCAL DIRECTORY"
# 
# cp ${AM1808_KERNEL}/arch/arm/boot/uImage ${project}/uImage
# 
# 
